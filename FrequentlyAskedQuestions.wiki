#summary Frequently Asked Questions

<wiki:toc max_depth="2" />

= Frequently Asked Questions =

== Can I use Dependency Injection (Spring, Guice, Weld) with Objectify? ==
Yes!  Objectify was designed with this in mind.
  # Ignore the {{{ObjectifyService}}} class and its static methods.  It is merely a static proxy for a single instance of {{{ObjectifyFactory}}}.  Instead you will use {{{ObjectifyFactory}}} directly.
  # Create an application-scoped {{{ObjectifyFactory}}} instance, register your classes, and inject it!
  # Alternatively, use the DAO pattern (see BestPractices) and inject your DAO.

== How do I shut off the datanucleus byte code enhancer? ==
  * In Eclipse, go to the Project Properties -> Builders and disable the Enhancer.

== Can I change data after it is loaded or before it is stored? ==
Absolutely:
  * See the [http://code.google.com/p/objectify-appengine/wiki/IntroductionToObjectify#Lifecycle_Callbacks Lifecycle Callbacks]

== Should I Use a String (Name) Id? ==
If it is a natural key, sure; Objectify allows this no problem. Here is a little more of a discussion [http://groups.google.com/group/google-appengine-java/browse_thread/thread/998289f853f5a688/c50446d98eb90017?#c50446d98eb90017 about it.]

== How can I integrate with memcached? ==
  * See the [http://code.google.com/p/objectify-appengine/wiki/IntroductionToObjectify#Caching Caching] documentation. Hint, add @Cached to your (entity) class.

== How do I migrate from JDO to Objectify? ==

You should have no trouble using Objectify side-by-side with JDO.
Just don't use the javax.persistence.Entity annotation on Objectify
entities, it will likely make the JDO bytecode enhancer try to enhance
it. Don't use an annotation if you don't need to name your entity something different than the classname.

For the most part, migrating JDO classes to Objectify classes should
be pretty straightforward.  The only trick will be mapping the
relationships.  Look at the raw Entity objects to see what structure
JDO created - relationships are just a Key on one end or both.  If you
make this field a Key<?> (or Collection<Key<?>>) in your Objectify
entities, it will map just fine.