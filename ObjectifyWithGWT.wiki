#summary Using Objectify with Google Web Toolkit
#labels Featured

This must be _the_ most common "design pattern" when developing web applications:

  # Load some data from the datastore
  # Pass this data to the presentation tier
  # Render the data to the user

However, there is often an impedance mismatch between the data tier and the presentation tier in web development tools.  Because, for example, Hibernate or JDO proxies cannot be passed through GWT RPC, developers are often forced to construct Data Transfer Objects to shuffle data back and forth.  Sometimes this is a good idea (say, when you have sophisticated program logic in your entities) but sometimes this is a laborious pain in the arse.

== No More DTOs ==

With a tiny amount of care, your entity objects can be passed through GWT serialization and used as-is in the presentation layer.  Simply write your entity as if it is a GWT client class!

  * Make sure your entity classes are part of your GWT module (typically in a .client package).
  * Don't call methods which are not part of the JRE emulation.
  * All referenced classes must themselves be GWT-safe.

But, you may ask, what about OKey fields?  This class is part of a Objectify, how does the GWT compiler find it the source for it?

OKey is deliberately GWT-safe, and objectify-X.X.jar includes the OKey.java source and a .gwt.xml module.  Simply add this to your module.xml.gwt:

{{{
<inherits name="com.googlecode.Objectify" />
}}}

You can now manipulate your entity objects in GWT and seamlessly pass them back and forth to the server through GWT-RPC.